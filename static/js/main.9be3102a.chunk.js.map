{"version":3,"sources":["../../src/hooks/useScript.js","../../src/components/Embed.jsx","../../src/hooks/useEmbed.js","App.js","index.js"],"names":["useScript","src","useState","status","setStatus","useEffect","script","document","setAttributeFromEvent","event","setStateFromEvent","PropTypes","node","onLoad","useMemo","App","useEmbed","window","Cognito","load","id","status2","status3","console","log","className","class","href","data-href","data-show-text","data-width","cite","ReactDOM","render","getElementById"],"mappings":"gNAGaA,EAAY,SAACC,GAAQ,MAEJC,mBAASD,EAAM,UAFX,QAEzBE,EAFyB,KAEjBC,EAFiB,KAgEhC,OA5DAC,qBACE,WAGE,MAOA,IAAIC,EAASC,wCAAb,MAEA,KAsBEH,EAAUE,eAAVF,oBAtBW,EAEXE,EAASC,uBAATD,WACAA,MACAA,WACAA,wCAEAC,6BAIA,IAAMC,EAAwB,SAACC,GAC7BH,6BAEEG,wBAFFH,UAMFA,6BACAA,8BASF,IAAMI,EAAoB,SAACD,GACzBL,EAAUK,wBAAVL,UAQF,OAJAE,6BACAA,8BAGO,WACL,IACEA,gCACAA,mCAhDFF,YAoDJ,CAzDFC,IA4DA,GC9CQM,WADQ,WAETA,SAFS,WAGRA,IAHQ,KAIRA,IAAUC,KCpBpB,MAAe,SAACN,EAAD,QAAsC,IAArCA,MAAS,SAA4B,IAAxBO,MAAS,yBACpC,IAAMV,EAASW,mBAAQ,kBAAMd,EAAN,MAMvB,MAJA,UAAIG,GACFU,IAGK,CAAP,ICwDaE,EA9DH,WAAO,IAAD,EAGZC,EAAS,yDAAyD,kBACpEC,OAAOC,QAAQC,KAAK,QAAS,CAAEC,GAAI,QAFnCjB,EAFc,sBAMEa,EAAS,yCAApBK,EANS,sBAOEL,EAChB,kEADKM,EAPS,oBAahB,OAFAC,QAAQC,IAAIrB,EAAQkB,EAASC,GAG3B,6BACE,6CACA,6BACE,yBAAKG,UAAU,aAEjB,uDACA,6BACE,gCAAYC,MAAM,gBAChB,4BACE,uBAAGC,KAAK,uCAAR,qaAUF,qCAGJ,6CACA,6BACE,yBAAKP,GAAG,YACR,yBACEM,MAAM,UACNE,YAAU,gEACVC,iBAAe,OACfC,aAAW,IAEX,gCACEC,KAAK,gEACLL,MAAM,yBAFR,YAIY,IACV,uBAAGC,KAAK,yCAAR,gBAAiE,IALnE,SAOE,uBAAGA,KAAK,iEAAR,iCCnDZK,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAAS2B,eAAe,U","file":"static/js/main.9be3102a.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\n// useScript hook recipe from https://usehooks.com/\nexport const useScript = (src) => {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(src ? 'loading' : 'idle')\n\n  useEffect(\n    () => {\n      // Allow falsy src value if waiting on other data needed for\n      // constructing the script URL passed to this hook.\n      if (!src) {\n        setStatus('idle')\n        return\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another intance of this hook\n      let script = document.querySelector(`script[src=\"${src}\"]`)\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script')\n        script.src = src\n        script.async = true\n        script.setAttribute('data-status', 'loading')\n        // Add script to document body\n        document.body.appendChild(script)\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event) => {\n          script.setAttribute(\n            'data-status',\n            event.type === 'load' ? 'ready' : 'error'\n          )\n        }\n\n        script.addEventListener('load', setAttributeFromEvent)\n        script.addEventListener('error', setAttributeFromEvent)\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status'))\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error')\n      }\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent)\n      script.addEventListener('error', setStateFromEvent)\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent)\n          script.removeEventListener('error', setStateFromEvent)\n        }\n      }\n    },\n    [src] // Only re-run effect if script src changes\n  )\n\n  return status\n}\n","import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { useScript } from '../hooks/useScript'\n\nconst Embed = ({\n  script = null,\n  mount = <span />,\n  onLoad = () => null,\n  loader = <span />\n}) => {\n  const status = useMemo(() => useScript(script))\n\n  if (status === 'ready') {\n    onLoad()\n  }\n\n  return status !== 'ready' ? loader : mount\n}\n\nEmbed.PropTypes = {\n  script: PropTypes.string.isRequired,\n  mount: PropTypes.node.isRequired,\n  onLoad: PropTypes.func,\n  loader: PropTypes.node\n}\n\nexport default Embed\n","import { useMemo } from 'react'\n\nimport { useScript } from './useScript'\n\nexport default (script = '', onLoad = () => null) => {\n  const status = useMemo(() => useScript(script))\n\n  if (status === 'ready') {\n    onLoad()\n  }\n\n  return [status]\n}\n","import React from 'react'\n\nimport { useEmbed } from 'react-embedcode'\nimport './index.css'\n\nconst App = () => {\n  const [\n    status\n  ] = useEmbed('https://www.cognitoforms.com/s/q9_PKa9THU2vJiM3U6wtMg', () =>\n    window.Cognito.load('forms', { id: '' })\n  )\n  const [status2] = useEmbed('//cdn.embedly.com/widgets/platform.js')\n  const [status3] = useEmbed(\n    'https://connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v8.0'\n  )\n\n  console.log(status, status2, status3)\n\n  return (\n    <div>\n      <h1>Cognito Forms</h1>\n      <div>\n        <div className='cognito' />\n      </div>\n      <h1>Instagram (via Embedly)</h1>\n      <div>\n        <blockquote class='embedly-card'>\n          <h4>\n            <a href='https://instagram.com/p/89CUyVoVY9/'>\n              Photograph by @paulnicklen taken while on assignment for @natgeo.\n              This is a photo from the past and I'm here to shoot something of\n              much greater importance. However, our mission is being compromised\n              by terrible weather. #Follow me on @paulnicklen to see if we\n              succeed this week or not. With this heavy rain we will definitely\n              not be seeing the aurora borealis tonight. #challenge #nature\n              #instaweather #smile #explore\n            </a>\n          </h4>\n          <p>null</p>\n        </blockquote>\n      </div>\n      <h1>Facebook Post</h1>\n      <div>\n        <div id='fb-root'></div>\n        <div\n          class='fb-post'\n          data-href='https://www.facebook.com/20531316728/posts/10154009990506729/'\n          data-show-text='true'\n          data-width=''\n        >\n          <blockquote\n            cite='https://www.facebook.com/20531316728/posts/10154009990506729/'\n            class='fb-xfbml-parse-ignore'\n          >\n            Posted by{' '}\n            <a href='https://www.facebook.com/facebookapp/'>Facebook App</a>{' '}\n            on&nbsp;\n            <a href='https://www.facebook.com/20531316728/posts/10154009990506729/'>\n              Thursday, 27 August 2015\n            </a>\n          </blockquote>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}